# detail view . 
from django.views.detail.DetailView
While  this view is executing self dot object will contain the object that the view is operating upon
.
this view inherited methods and attributes from the following views. : - 

- django.view.generic.detail.singleobjectTemplateResponseMixin
- django.views.generic.base.TemplaeResponseMixin 
- djsngo.views.generic.detail.BaseDetailView 
- django.view.generic.detail.singleobjectMixin
- django.views.generic.base.view



singleobjectTemplateResponseMixin------------

A mix in class that performs template based response rendering four views that operate upon a single object instance require that the views it is mixed with provides self object the object instancethat the view is operating on self object will usually be but ej not required to be instance of a django model it may be none if the view in the process of constructing a new instance.

attribute : -

template_name_field - The field on the current object instant that can be used to determine the name of candidate template if Add her template _name _field itself or the value of template _name _field on the current object instance is none the object will not be usedfor a candidate template name.

template_name_suffix : - 

The Suffix to 2 append to the auto generated candidate template name default suffix is _detail. 



------------single0bjectmixin--------------

django.views.feneric.detail.singleobjectMixin

provides a a mechanism for looking up an object associated with the current HTTP request.

attribute :-

model = The model that the view will display data for specifying model is student is effectively the same as specifying queries at equal to student object all parenthesis where object stands forstudent default manager.

queryset :- 
A queryset  that represent the objective provide the value of query set supersedes the value provide four model.


slug_field :-

The name of the field on the model that contains the slug by default slug _field is slug.

slug_url_kwarg :- 
the name of the url conf Keyword argument that contains the slug by default slug _url _kwargs is slug 


pk_url_kwargs : - 

the name of the url conf Keyword argument that contain the primary key by default pk_url_kwargs is pk 

context_object_name : - 

Designated the name of the variable to use in the context

query_pk_and_slug - it's true cause get _object parenthesis to perform its lookup using both the primary key and the slug default to false.

methods : - 

get_object(querset=None) - returns the single object that this view will display . if queryset is provide , that queryset will be used as the sourse of object , otherwise , get_queryset() will be used get_object() looks for a pka_url kwargs argument in the argument to the view , if this argument is not found it looks for a slug_url_kwargs argument and perform a slug lookup using the slug_field .

when queryy_pk_and_slug is true , get_object() will perform its lookup using both the primary key and the slug 


get_queryset() - retuens the queryset that will be used to retrive the object that this view will display by default get_queryset returns the value of the querset attribute if it is set otherwise it construct a querset by calling the all() methods attribute default manager . 

get_context_object_name(obj) - 


get_context_data(**kwargs) - return context data for displaing the object .




-------------------detailview with default template & context ----------------------

views.py 
from dajngo.views.generic.detail import DatailView 
import  model 


class StudentDetailView(DetailView):
      model = student 



define url pattern -- 

path("student/<int:pk>" , views.StudentFetailView.as_view() )

default tempalt : -

_fetail.html 



--------------cutom tempalte and custm object ------------------
model = model 
template_name = customname 
context_objet = 'xustomobjextname'


