 how form made -- next 


 configure id attribute , label tag , dynamic initial value 

 auto id ---

 if you want to remove label and id in html === auto_id 
 use auto_id construction to control id , and label behaviour , give true or false -- , by default auto_id = 'id_%s' and label is came with default .

 give this things where you make this form as context 



 label_suffix --- 

 give ssame where give auto_id , mean after label what you define llike equal to and anything you want 


 initial ----
  it is a dict pass same where you pass previous data , it give simple placeholder to each input , note no of item you give in intial it only give only for that intial element , 

help_text --- mean when someone leave a field if it require this erro show 

render form  field mannualy ------------ mean as p as table as li and form.name_of_field




 field mean == putting some word after form.whatyou want .manual field names .
form.
 field.label = ex = form.name.label -- it give label 
field.label_tag = wrap in html tag by deffault label sufix is : 
field.id_for_label = id which is used for this field 
field.value = ex - form.name.value
field.html_name = the name of the field that will be used in the input element , name field . this take the foem prefix into account , if it has been set .  ex = form.name.html_name 

field.help_text = any help text that is associated with the field . ex - form.fiedl.help_text

field.field = the field from instace class that is boundfield wrap . you can use it to acces field attribute  ex = form.name.help_text 


field.is_hidden = in htnl form have password field hidden so this is same check this is hidden or not 

hiw it work lit bit example --
 

 {% if field.is_hiden %}
 do this 
 {% endif %}
note all this is write inside double currly braces 




form filed argument ------------------------ mean addin gso much thing in form fields 


form field are themself classes  , they manage , from data and perform validation when a form is submitted .


1 . = widget="Textarea"
2 . = require =  tell which form is require when form is submitted  by default it true for all field 
3. = label = label argument lest you specify the human_friendly label for field . this is used when the fiedl is displayed in a form 
4 . label_suffix = the label_suffix let you overridew the form 's label_suffix on a per field basis 
5. initial = initial arghument use when form is render this field is an unbound form 
6. = disable - the disable boolean argument when set to true disable a foem fiedl using the disable html attribute so that it wont , t  be editable by user . even if a user tampers  with the field value submitted to
 the server , it will be ignore in favor of the vallue form the form initial data .


 7. help_text = mean when a field is render it show what you have to do in this field .

 error_messages = this can override the default error set into a field .

 validitors = give list of validation function for the field .

 localize = the localize argument enable the localize of form data input as well as the rendered output .



 widget = this argument specfiy a widget to use when rendering the fields /  


 widget ------------

  widget handles representation of html  element 

  tell about the input element in which type and how . 

  handel the rendering of html and extration of data from a get / post dicitionary that corespond to the widget .

  the html generated by the built in widget uses html5 syntax , targeting !docktype html 

  whenever you specxify a field on a form django willl use a default widget that is appropriate to the type of data is to be displayed .

  we can override each field default widget when we require .

   it deal with rendering html form input element on the web page and extraction of raw submitted data 

   example = Textarea , textinput .

   ================================

   attrs -  dictornary conataing html attribute to be set on the render widget 
   
   example = feedback = forms.charfield(widget=forms.TextInput(attrs=('class ': ' somecss1 somecss2', 'id' : 'uniqueid'))


built in widget ====

  textinput = mean inout type = text
  NumberInput = input type = number 
  EmailInout = mean type = Email 
  URlInput = mean input type url 
  PasswordInput = type password
  HiddenInput = type = hidden 
  Select = type = select mean choice 
  NullBoolean = select widget with options Unknow yes and no 
  SelectMultiple = similar to select but allow multiple selection <select multiple>...</select>
  RadioSelect similar to select but rendered as a list o fradio withing <li> tags .
  FileInput ,
  MultipleHiddenInput 
  SplitDateTimeWidget
  SplaitHiddenDateTimeWidget

  SelectDataWidget 



  ------------------

   error_messages , validators , localize , widget 
  






